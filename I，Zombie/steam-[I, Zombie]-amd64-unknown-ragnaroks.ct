<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"特征码注入_锁定时间"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
//特征码,0:"D9 9F FC 00 00 00",1:"D9 87 FC 00 00 00"
aobscan(address,D9 9F FC 00 00 00 D9 87 FC 00 00 00)
registersymbol(address)
address:
  nop 3
  nop 3
  nop 3
  nop 3

[DISABLE]
address:
  fstp dword ptr [edi+FC]
  fld dword ptr [edi+FC]

unregistersymbol(address)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>96</Key>
          </Keys>
          <Description>锁定时间</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"特征码注入_玩家和跟班不扣血"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscan(address,8B 48 18 2B 4D 0C 89 48 18 C9)
registersymbol(address)
alloc(newmem,$128)

newmem:
  //eax是当前触发事件的角色指针
  //玩家,[[[eax+c]-&gt;+1a0]-&gt;+44]==1
  //敌人,[[[eax+c]-&gt;+1a0]-&gt;+44]==8
  push ebx
  mov ebx,[eax+c]
  mov ebx,[ebx+1a0]
  mov ebx,[ebx+44]
  cmp ebx,8
  pop ebx
  jne address+09
  mov ecx,[eax+18]
  sub ecx,[ebp+0C]
  mov [eax+18],ecx
  jmp address+09

address:
  jmp newmem//替换了 8B 48 18 2B 4D
  nop //替换了 0C

[DISABLE]
address:
  mov ecx,[eax+18]
  sub ecx,[ebp+0C]
  mov [eax+18],ecx
  leave

unregistersymbol(address)
dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <Description>玩家和跟班不扣血</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>38</ID>
      <Description>"特征码注入_玩家和跟班不扣血2"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
aobscan(address,8B 48 18 2B 4D 0C 89 48 18 C9)
registersymbol(address)
alloc(newmem,$128)

newmem:
  //eax是当前触发事件的角色指针
  //玩家,[[[eax+c]+1a0]+44]==1
  //百姓,[[[eax+c]+1a0]+44]==257
  //敌人,[[[eax+c]+1a0]+44]==8
  push ebx
  mov ebx,[eax+c]
  mov ebx,[ebx+1a0]
  mov ebx,[ebx+44]
  cmp ebx,8
  pop ebx
  jne +0x09
  mov ecx,[eax+18]
  sub ecx,[ebp+0C]
  mov [eax+18],ecx
  jmp address+09

address:
  jmp newmem//替换了 8B 48 18 2B 4D
  nop //替换了 0C

[DISABLE]
address:
  mov ecx,[eax+18]
  sub ecx,[ebp+0C]
  mov [eax+18],ecx
  leave

unregistersymbol(address)
dealloc(newmem)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>97</Key>
          </Keys>
          <Description>玩家和跟班不扣血</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"----------------分割线----------------"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"特征码搜寻_仅玩家"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
{$lua}
local addressList=AOBScan('?? ?? ?? ?? 00 00 00 00 ?? ?? ?? 05 ?? 0D ?? 06 ?? ?? ?? ?? ?? ?? 00 00 ?? ?? 00 00 00 00 00 00','+W+X-C',0,'')
if(addressList==nil) then
  print('未找到任何地址')
else
  print('找到',addressList.Count,'个地址')
end
local address
for i=0,addressList.Count-1 do
  print('地址: ',addressList[i])
  local hpm=readInteger(addressList[i]..'+0x14')
  local hpn=readInteger(addressList[i]..'+0x18')
  local ct=readInteger(readInteger(readInteger(addressList[i]..'+0x0c')+0x1a0)+0x44)
  if(hpm&gt;0 and hpn&gt;0 and ct~=8) then
    print('有效地址: ',addressList[i])
    print('角色类型: ',ct)
    --writeInteger(addressList[i]..'+0x14',hpm*2)
    --writeInteger(addressList[i]..'+0x18',hpm*2)
    address=addressList[i]
  end
end
addressList.destroy()
return string.format([[
define(playerAddress,%s)
registersymbol(playerAddress)
]],address)
{$asm}
//registersymbol(playerAddress)

[DISABLE]
unregistersymbol(playerAddress)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"玩家/敌人结构为32字节"</Description>
          <LastState Value="" RealAddress="00000000"/>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"角色类型"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>playerAddress+c</Address>
          <Offsets>
            <Offset>44</Offset>
            <Offset>1a0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"玩家HP上限"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>playerAddress+14</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"玩家当前HP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>playerAddress+18</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>31</ID>
      <Description>"特征码作弊_玩家锁定血量"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
{$lua}
local addressList=AOBScan('?? ?? ?? ?? 00 00 00 00 ?? ?? ?? 05 ?? 0D ?? 06 ?? ?? ?? ?? ?? ?? 00 00 ?? ?? 00 00 00 00 00 00','+W+X-C',0,'')
if(addressList==nil) then
  print('未找到任何地址')
  return 'ret'
end
local address
for i=0,addressList.Count-1 do
  --print('地址: ',addressList[i])
  local hpm=readInteger(addressList[i]..'+0x14')
  local hpn=readInteger(addressList[i]..'+0x18')
  local ct=readInteger(readInteger(readInteger(addressList[i]..'+0x0c')+0x1a0)+0x44)
  if(hpm&gt;0 and hpn&gt;0 and ct~=8) then
    print('有效地址: ',addressList[i])
    print('角色类型: ',ct)
    --writeInteger(addressList[i]..'+0x14',hpm*2)
    --writeInteger(addressList[i]..'+0x18',hpm*2)
    address=addressList[i]
  end
end
addressList.destroy()
return string.format([[
define(playerAddress,%s)
registersymbol(playerAddress)
]],address)
{$asm}
//registersymbol(playerAddress)

[DISABLE]
unregistersymbol(playerAddress)
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>99</Key>
          </Keys>
          <Description>玩家锁定血量</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"玩家当前HP"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>playerAddress+18</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>37</ID>
      <Description>"特征码作弊_玩家血量翻倍"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">[ENABLE]
{$lua}
local addressList=AOBScan('?? ?? ?? ?? 00 00 00 00 ?? ?? ?? 05 ?? 0D ?? 06 ?? ?? ?? ?? ?? ?? 00 00 ?? ?? 00 00 00 00 00 00','+W+X-C',0,'')
if(addressList==nil) then
  print('未找到任何地址')
  return
end
for i=0,addressList.Count-1 do
  --print('地址: ',addressList[i])
  local hpm=readInteger(addressList[i]..'+0x14')
  local hpn=readInteger(addressList[i]..'+0x18')
  if(hpm&gt;0 and hpn&gt;0) then
    print('有效地址: ',addressList[i])
    local ct=readInteger(readInteger(readInteger(addressList[i]..'+0x0c')+0x1a0)+0x44)
    print('角色类型: ',ct)
    if(ct~=8) then
      writeInteger(addressList[i]..'+0x14',hpm*2)
      writeInteger(addressList[i]..'+0x18',hpm*2)
    end
  end
end
addressList.destroy()
addressList=nil
{$asm}

[DISABLE]
</AssemblerScript>
      <Hotkeys>
        <Hotkey>
          <Action>Toggle Activation</Action>
          <Keys>
            <Key>17</Key>
            <Key>100</Key>
          </Keys>
          <Description>玩家血量翻倍</Description>
          <ID>0</ID>
        </Hotkey>
      </Hotkeys>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
