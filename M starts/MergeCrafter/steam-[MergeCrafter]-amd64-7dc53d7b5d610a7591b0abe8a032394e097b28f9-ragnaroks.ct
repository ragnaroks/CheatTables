<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>36</ID>
      <Description>"#1 XP、ENERGY、COINS、RUNIC 不减"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat1_entry,Assembly-CSharp:CurrencyManager:SpendCurrency)
assert(cheat1_entry+4,48 81 EC 90 00 00 00)
registersymbol(cheat1_entry)
label(returnhere)
alloc(cheat1_code,32,cheat1_entry)

cheat1_code:
  sub rsp,90
  xor rdx,rdx
  jmp returnhere

cheat1_entry+4:
  jmp cheat1_code
  nop 2
returnhere:




[DISABLE]
cheat1_entry+4:
  DB 48 81 EC 90 00 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>37</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"#2 经验值 32 倍"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">//XPManager:SpawnXPOrbs+4
{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat2_entry,Assembly-CSharp:XPManager:SpawnXPOrbs)
assert(cheat2_entry+04,48 81 EC ?? 01 00 00)
registersymbol(cheat2_entry)
label(returnhere)
alloc(cheat2_code,32,cheat2_entry)
registersymbol(cheat2_code)
label(cheat2_store)
registersymbol(cheat2_store)

cheat2_code:
  shl rdx,05
  readmem(cheat2_entry+04,7)
  jmp returnhere
align 4
cheat2_store:
  readmem(cheat2_entry+04,7)

cheat2_entry+04:
  jmp cheat2_code
  nop 2
returnhere:

[DISABLE]
cheat2_entry+04:
  readmem(cheat2_store,7)

dealloc(*)
unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>9</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"#3 工具耐久度不变"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">//ToolCell:set_CurrentDurability
{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat3_entry,Assembly-CSharp:ToolCell:set_CurrentDurability)
registersymbol(cheat3_entry)

cheat3_entry:
  DB C3

[DISABLE]
cheat3_entry:
  DB 55

unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>12</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat3_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>13</ID>
      <Description>"#4 解锁内购"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">//IAPManager:StartPurchase+5e
// 这里用符号代替字节自适应地址
{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat4_entry,Assembly-CSharp:IAPManager:StartPurchase)
findmonomethod(cheat4_entry2,Assembly-CSharp:IAPManager:PurchaseSteam)
findmonomethod(cheat4_entry3,Assembly-CSharp:IAPManager:PurchaseSuccess)
assert(cheat4_entry+57,48 8B 4D F0 48 8B D6 49 BB)
registersymbol(cheat4_entry)
registersymbol(cheat4_entry2)
registersymbol(cheat4_entry3)

cheat4_entry+5E:
  mov r11,cheat4_entry3

[DISABLE]
cheat4_entry+5E:
  mov r11,cheat4_entry2

unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>14</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat4_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"#5 破坏力 32 倍"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">//Breakable:TakeDamageFromTool+8
{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat5_entry,Assembly-CSharp:Breakable:TakeDamageFromTool)
assert(cheat5_entry+08,48 89 75 F8 48 8B F1)
registersymbol(cheat5_entry)
label(returnhere)
alloc(cheat5_code,32,cheat5_entry)
registersymbol(cheat5_code)
label(cheat5_define1)

cheat5_code:
  mov [rbp-08],rsi
  mov rsi,rcx
  mulss xmm1,[cheat5_define1]
  jmp returnhere
align 4
cheat5_define1:
  DB 00 00 00 42

cheat5_entry+08:
  jmp cheat5_code
  nop 2
returnhere:

[DISABLE]
cheat5_entry+08:
  DB 48 89 75 F8 48 8B F1

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>19</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat5_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat5_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"#6 熔炉立刻完成"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat6_entry,Assembly-CSharp:Furnace:set_SmeltTimer)
assert(cheat6_entry+08,48 89 4D F8 48 89 55 F0)
registersymbol(cheat6_entry)
label(returnhere)
alloc(cheat6_code,32,cheat6_entry)

cheat6_code:
  mov [rbp-08],rcx
  xor rdx,rdx
  mov [rbp-10],rdx
  jmp returnhere

cheat6_entry+08:
  jmp cheat6_code
  nop 3
returnhere:




[DISABLE]
cheat6_entry+08:
  DB 48 89 4D F8 48 89 55 F0

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>23</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat6_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>33</ID>
      <Description>"#7 强制解锁活动地块"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat7_entry,Assembly-CSharp:EventLandGridCell:CanBeEventLandUnlocked)
assert(cheat7_entry+13,85 C0)
registersymbol(cheat7_entry)

cheat7_entry+13:
  DB EB 49

[DISABLE]
cheat7_entry+13:
  DB 85 C0

unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>34</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat10_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"#8 地图快速探索"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">//CartographyCell:CheckTimer+43
{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat8_entry,Assembly-CSharp:CartographyCell:CheckTimer)
assert(cheat8_entry+43,0F 82 22 00 00 00)
registersymbol(cheat8_entry)

cheat8_entry+43:
  nop 6

[DISABLE]
cheat8_entry+43:
  DB 0F 82 22 00 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>26</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat8_entry</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>30</ID>
      <Description>"#9 钻井快速完成"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat9_entry,Assembly-CSharp:MiniDrill:get_DrillTimer)
assert(cheat9_entry+11B,F2 0F 2C C0)
registersymbol(cheat9_entry)

cheat9_entry+11B:
  xor eax,eax
  nop 2

[DISABLE]
cheat9_entry+11B:
  DB F2 0F 2C C0

unregistersymbol(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>31</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat9_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat9_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
