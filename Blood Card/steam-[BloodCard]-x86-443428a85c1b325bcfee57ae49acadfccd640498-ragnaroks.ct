<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"#1 无限金币"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(GameAssembly.dll+488593,8B 7D 10 01 7E 14)
label(returnhere)
alloc(cheat1_code,32,GameAssembly.dll)
registersymbol(cheat1_code)

cheat1_code:
  mov edi,[ebp+10]
  add [esi+14],edi
  mov [esi+14],2000
  jmp returnhere

GameAssembly.dll+488593:
  jmp cheat1_code
  nop
returnhere:

[DISABLE]
GameAssembly.dll+488593:
  DB 8B 7D 10 01 7E 14

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>3</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>4</ID>
      <Description>"#2 卡牌不消耗能量"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(GameAssembly.dll+A97C10,55 8B EC 8B 45 08 8B 4D 0C 89 88 40 01 00 00 5D C3)
label(returnhere)
alloc(cheat2_code,32,GameAssembly.dll)
registersymbol(cheat2_code)

cheat2_code:
{$CCODE refECX=ecx}
/*
  char * ptrStringA1 = (char *)malloc(32);
  snprintf_s(ptrStringA1,32,31,"%lx",refECX);
  OutputDebugStringA(ptrStringA1);
  free(ptrStringA1);
*/
  if(refECX==0){goto labelWriteBack;}

  unsigned int * ptrCardData = (unsigned int *)refECX;
  if(ptrCardData==0){goto labelWriteBack;}

  unsigned int * ptrCardItemData = *(ptrCardData+7);
  if(ptrCardItemData==0){goto labelWriteBack;}

  unsigned int * ptrCardItemStatusData = *(ptrCardItemData+23);
  if(ptrCardItemStatusData==0){goto labelWriteBack;}

  unsigned int * ptrCardItemStatusDataList = *(ptrCardItemStatusData+2);
  if(ptrCardItemStatusDataList==0){goto labelWriteBack;}

  unsigned int * ptrCardItemStatusDataListItems = *(ptrCardItemStatusDataList+2);
  unsigned char szCardItemStatusDataListItems = (unsigned char)*(ptrCardItemStatusDataList+3) + 4;
  if(ptrCardItemStatusDataListItems==0 || szCardItemStatusDataListItems&lt;1){goto labelWriteBack;}

  // public enum AAAAAAAAAAAAAAAke.CostEnergy = 3101
  unsigned char i1 = 4;
  for(i1;i1&lt;szCardItemStatusDataListItems;i1++){
    unsigned int * item = *(ptrCardItemStatusDataListItems+i1);
    if(item==0 || *(item+4)!=3101){continue;}
    *(item+6) = 0;
  }
/* labelWriteBack */
labelWriteBack:
{$ASM}
  mov [eax+140],ecx
  jmp returnhere

GameAssembly.dll+A97C19:
  jmp cheat2_code
  nop
returnhere:

[DISABLE]
GameAssembly.dll+A97C19:
  DB 89 88 40 01 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>5</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
