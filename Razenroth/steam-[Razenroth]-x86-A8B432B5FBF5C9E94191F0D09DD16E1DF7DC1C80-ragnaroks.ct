<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="41">
  <CheatEntries>
    <CheatEntry>
      <ID>6</ID>
      <Description>"#1 获取生命值地址"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
aobscan(cheat1_entry,55 8B EC 57 83 EC 24 8B 7D 08 C7 45 E4 00 00 00 00 C7 45 E0 00 00 00 00 E8 ? ? ? ? 8B 40 10 8B 40 20 89 45 E4,"+W+X")
assert(cheat1_entry+20,8B 40 20 89 45 E4)
registersymbol(cheat1_entry)
alloc(cheat1_code,64,cheat1_entry)
registersymbol(cheat1_code)
label(returnhere)
label(cheat1_store1)
registersymbol(cheat1_store1)

cheat1_code:
  mov [cheat1_store1],eax
  mov eax,[eax+20]
  mov [ebp-1C],eax
  jmp returnhere
cheat1_store1:
  DB 00 00 00 00

cheat1_entry+20:
  jmp cheat1_code
  nop
returnhere:
[DISABLE]
cheat1_entry+20:
  DB 8B 40 20 89 45 E4

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>7</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"结构地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat1_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"金币"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat1_store1</Address>
          <Offsets>
            <Offset>1C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"生命值"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat1_store1</Address>
          <Offsets>
            <Offset>20</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"魔法值"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat1_store1</Address>
          <Offsets>
            <Offset>24</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"钥匙"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat1_store1</Address>
          <Offsets>
            <Offset>28</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>20</ID>
      <Description>"#2 获取石头地址"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
aobscan(cheat2_entry,55 8B EC 83 EC 08 E8 ? ? ? ? 8B C8 39 09 8B 40 54 C9 C3,"+W+X")
assert(cheat2_entry+0B,8B C8 39 09 8B 40 54)
registersymbol(cheat2_entry)
alloc(cheat2_code,64,cheat2_entry)
registersymbol(cheat2_code)
label(returnhere)
label(cheat2_store1)
registersymbol(cheat2_store1)

cheat2_code:
  mov [cheat2_store1],eax
  mov ecx,eax
//  cmp [ecx],ecx
  mov eax,[eax+54]
  jmp returnhere
cheat2_store1:
  DB 00 00 00 00

cheat2_entry+0B:
  jmp cheat2_code
  nop 2
returnhere:
[DISABLE]
cheat2_entry+0B:
  DB 8B C8 39 09 8B 40 54

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"结构地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat2_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"石头"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat2_store1</Address>
          <Offsets>
            <Offset>54</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"#3 获取点数地址"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
aobscan(cheat3_entry,55 8B EC 83 EC 18 33 C0 89 45 F4 E8 ? ? ? ? 8B C8 8B 45 F4 8B 51 3C,"+W+X")
assert(cheat3_entry+10,8B C8 8B 45 F4)
registersymbol(cheat3_entry)
alloc(cheat3_code,64,cheat3_entry)
registersymbol(cheat3_code)
label(returnhere)
label(cheat3_store1)
registersymbol(cheat3_store1)

cheat3_code:
  mov [cheat3_store1],eax
  mov ecx,eax
  mov eax,[ebp-0C]
  jmp returnhere
cheat3_store1:
  DB 00 00 00 00

cheat3_entry+10:
  jmp cheat3_code
returnhere:
[DISABLE]
cheat3_entry+10:
  DB 8B C8 8B 45 F4

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>29</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat3_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat3_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"结构地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat3_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>32</ID>
          <Description>"属性点数"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat3_store1</Address>
          <Offsets>
            <Offset>3C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"技能点数"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat3_store1</Address>
          <Offsets>
            <Offset>38</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>36</ID>
      <Description>"#4 获取属性点地址"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
aobscan(cheat4_entry,55 8B EC 56 83 EC 04 8B 75 08 0F B6 45 0C 85 C0 0F 84 42 00 00 00 8B 46 0C 83 EC 0C 50,"+W+X")
assert(cheat4_entry+25,8B 46 14 40 89 46 14)
registersymbol(cheat4_entry)
alloc(cheat4_code,64,cheat4_entry)
registersymbol(cheat4_code)
label(returnhere)
label(cheat4_store1)
registersymbol(cheat4_store1)

cheat4_code:
  mov [cheat4_store1],esi
  mov eax,[esi+14]
  inc eax
  mov [esi+14],eax
  jmp returnhere
cheat4_store1:
  DB 00 00 00 00

cheat4_entry+25:
  jmp cheat4_code
  nop 2
returnhere:
[DISABLE]
cheat4_entry+25:
  DB 8B 46 14 40 89 46 14

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>37</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat4_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>38</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat4_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"结构地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat4_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>40</ID>
          <Description>"属性点"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat4_store1</Address>
          <Offsets>
            <Offset>14</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
