<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>2</ID>
      <Description>"#1 不被警戒"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(ACCGame-Win32-Shipping.exe+B48444,F3 0F 11 86 A8 00 00 00)

ACCGame-Win32-Shipping.exe+B48444:
  nop 4
  nop 4

[DISABLE]
ACCGame-Win32-Shipping.exe+B48444:
  DB F3 0F 11 86 A8 00 00 00
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"#2 获取分数地址 (失效)"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(ACCGame-Win32-Shipping.exe+1111DE5,8B 55 E0 8B 45 14 89 14 06)
alloc(cheat2_code,72,ACCGame-Win32-Shipping.exe)
registersymbol(cheat2_code)
label(returnhere)
label(default)
label(cheat2_store1)
registersymbol(cheat2_store1)

cheat2_code:
  mov eax,[ebp+14]
  pushfd
  cmp esi,B4
  jne short default
//  cmp [ebp-58],ACCGame-Win32-Shipping.exe+104DD2A
//  jne default
//  cmp [ebp-50],ACCGame-Win32-Shipping.exe+1116944
//  jne default
  lea eax,[esi+eax]
  mov [cheat2_store1],eax
default:
  popfd
  mov eax,[ebp+14]
  mov [esi+eax],edx
  jmp returnhere
cheat2_store1:
  DB 00 00 00 00

ACCGame-Win32-Shipping.exe+1111DE8:
  jmp cheat2_code
  nop
returnhere:

[DISABLE]
ACCGame-Win32-Shipping.exe+1111DE8:
  DB 8B 45 14 89 14 06

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>4</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat2_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>5</ID>
          <Description>"分数地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat2_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"分数"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat2_store1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"#3 设置生命值"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>//esi+9B4 可能是生命值上限
{$STRICT}
[ENABLE]
assert(ACCGame-Win32-Shipping.exe+CC888,8B 44 24 08 D9 00 8B 44 24 04 D9 18)
alloc(cheat3_code,96,ACCGame-Win32-Shipping.exe)
registersymbol(cheat3_code)
label(returnhere)
label(default)

{$C}
#include &lt;stdbool.h&gt;
unsigned int cheat3_store1=0x00;
unsigned int cheat3_store2=0x00;
float cheat3_setting1=10.0F;
float cheat3_setting2=300.0F;
{$ASM}

cheat3_code:
  mov eax,ACCGame-Win32-Shipping.exe
{$CCODE refESP=esp refEAX=eax}
  unsigned int *ptrESP = (unsigned int *)refESP;
  bool condition1 = *ptrESP==(refEAX+0x57142);
  bool condition2 = *(ptrESP+7)==(refEAX+0x5BCA8);
  bool condition3 = *(ptrESP+18)==(refEAX+0x1208F30);
  if(!condition1 || !condition2 || !condition3){ goto labelWriteBack; }
  // 生命值
  bool conditionHealth1 = *(ptrESP+20)==(refEAX+0x4FD0A);
  bool conditionHealth2 = *(ptrESP+25)==(refEAX+0x70DD6);
  bool conditionHealth3 = *(ptrESP+39)==(refEAX+0x5A604);
  if(conditionHealth1 &amp;&amp; conditionHealth2 &amp;&amp; conditionHealth3){
    cheat3_store1 = *(ptrESP+2);
    float *ptrValue = (float *)cheat3_store1;
    *ptrValue = cheat3_setting1;
  }
  // Helix值
  bool conditionHelix1 = *(ptrESP+15)==(refEAX+0x5C18C);
  bool conditionHelix2 = *(ptrESP+20)==(refEAX+0x4FA5A);
  bool conditionHelix3 = *(ptrESP+25)==(refEAX+0x4F9EE);
//  bool conditionHelix4 = *(ptrESP+30)==(refEAX+0x490D8);
//  bool conditionHelix5 = *(ptrESP+34)==(refEAX+0x4F74C);
  if(conditionHelix1 &amp;&amp; conditionHelix2 &amp;&amp; conditionHelix3){
    cheat3_store2 = *(ptrESP+2);
    float *ptrValue = (float *)cheat3_store2;
    *ptrValue = cheat3_setting2;
  }
  // 回写
  labelWriteBack:
{$ASM}
default:
  mov eax,[esp+08]
  fld dword ptr [eax]
  jmp returnhere

ACCGame-Win32-Shipping.exe+CC888:
  jmp cheat3_code
  nop
returnhere:

[DISABLE]
ACCGame-Win32-Shipping.exe+CC888:
  DB 8B 44 24 08 D9 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>30</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat3_code</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>27</ID>
          <Description>"生命值地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat3_store1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>34</ID>
          <Description>"Helix 值地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>cheat3_store2</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>33</ID>
          <Description>"--------------------------------"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>31</ID>
          <Description>"当前生命值"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>cheat3_store1</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"设定生命值 (低于 2 可能被秒杀)"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>cheat3_setting1</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>35</ID>
          <Description>"--------------------------------"</Description>
          <GroupHeader>1</GroupHeader>
        </CheatEntry>
        <CheatEntry>
          <ID>36</ID>
          <Description>"当前 Helix 值"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>cheat3_store2</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>37</ID>
          <Description>"设定 Helix 值"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Float</VariableType>
          <Address>cheat3_setting2</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>17</ID>
      <Description>"#4 无限投掷物"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
assert(ACCGame-Win32-Shipping.exe+B78446,83 B9 AC 00 00 00 00)
alloc(cheat4_code,32,ACCGame-Win32-Shipping.exe)
registersymbol(cheat4_code)
label(returnhere)

cheat4_code:
  mov [ecx+000000AC],20
  cmp dword ptr [ecx+000000AC],00
  jmp returnhere

ACCGame-Win32-Shipping.exe+B78446:
  jmp cheat4_code
  nop 2
returnhere:

[DISABLE]
ACCGame-Win32-Shipping.exe+B78446:
  DB 83 B9 AC 00 00 00 00

unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>38</ID>
          <Description>"注入代码地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat4_code</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
