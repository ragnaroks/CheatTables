<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"#1 武器控制"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript Async="1">{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat1_entry,Assembly-CSharp:FirearmWeapon:FireWeapon)
registersymbol(cheat1_entry)
alloc(cheat1_data,8,cheat1_entry)
registersymbol(cheat1_data)

[DISABLE]
unregistersymbol(*)
dealloc(*)
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>2</ID>
          <Description>"注入方法地址"</Description>
          <ShowAsHex>1</ShowAsHex>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>Byte</VariableType>
          <Address>cheat1_entry</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"弹匣不减"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$STRICT}
[ENABLE]
assert(cheat1_entry+73,E8)

cheat1_data:
  readmem(cheat1_entry+74,4)

cheat1_entry+73:
  nop 5

[DISABLE]
cheat1_entry+73:
  DB E8
  readmem(cheat1_data,4)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"快速开火"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$STRICT}
[ENABLE]
//assert(cheat1_entry+15,39 C8)
assert(cheat1_entry+4C,0F B6 45 24)

cheat1_entry+15:
  DB EB 35
 
[DISABLE]
cheat1_entry+15:
//  DB 39 C8
  cmp eax,ecx
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"无后座力"</Description>
          <Options moDeactivateChildrenAsWell="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript Async="1">{$STRICT}
[ENABLE]
assert(cheat1_entry+8B,E8)

cheat1_data+04:
  readmem(cheat1_entry+8C,4)

cheat1_entry+8B:
  nop 5

[DISABLE]
cheat1_entry+8B:
  DB E8
  readmem(cheat1_data+04,4)
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"#2 免疫僵尸伤害"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat2_entry,Assembly-CSharp:MonsterZombie:AttackPlayer)
assert(cheat2_entry,55)
registersymbol(cheat2_entry)

cheat2_entry:
  ret

[DISABLE]
cheat2_entry:
  push ebp

unregistersymbol(*)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"#3 免疫跌落伤害"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat3_entry,Assembly-CSharp:DelaHealthWeaponsItemsAndScore:TakeDamage_Fall)
assert(cheat3_entry,55)
registersymbol(cheat3_entry)

cheat3_entry:
  ret

[DISABLE]
cheat3_entry:
  push ebp

unregistersymbol(*)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"#4 免疫 piranha 伤害"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat4_entry,Assembly-CSharp:DelaHealthWeaponsItemsAndScore:TakeDamage_Piranha)
assert(cheat4_entry,55)
registersymbol(cheat4_entry)

cheat4_entry:
  ret

[DISABLE]
cheat4_entry:
  push ebp

unregistersymbol(*)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"#5 手雷不减"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{$STRICT}
[ENABLE]
usemono()
findmonomethod(cheat5_entry,Assembly-CSharp:DelaHealthWeaponsItemsAndScore:ThrowGrenade)
assert(cheat5_entry+6D,8B 47 54 48 89 47 54)
registersymbol(cheat5_entry)

cheat5_entry+6D:
  nop 3
cheat5_entry+70:
  nop
cheat5_entry+71:
  nop 3

[DISABLE]
cheat5_entry+6D:
  DB 8B 47 54 48 89 47 54

unregistersymbol(*)
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
